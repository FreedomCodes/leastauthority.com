#!/usr/bin/env python

from __future__ import unicode_literals

from sys import argv, stdin
from json import load

from twisted.python.usage import UsageError, Options
from twisted.python.url import URL
from twisted.internet.task import react
from twisted.web.client import Agent

from lae_automation.containers import autopad_b32decode, configmap_public_host
from lae_automation.model import (
    SubscriptionDetails,
    make_external_furl,
)
from lae_automation.subscription_manager import network_client

class MigrateOptions(Options):
    optParameters = [
        ("input", None, "-", "The SSEC2 subscription details file for the subscription to migrate (- for stdin)."),
        ("subscribe-api", None, None, "A URL giving the base of the subscription manager API to which to migrate the subscription."),
        ("email", None, None, "The email address associated with this subscription."),
        ("plan-id", None, None, "The product identifier for this subscription."),
        ("domain", None, None, "The domain on which the subscription is hosted."),
    ]

    def postOptions(self):
        if self["input"] == "-":
            self["input"] = stdin
        else:
            self["input"] = open(self["input"], "rt")
        self["subscribe-api"] = URL.fromText(self["subscribe-api"].decode("utf-8"))



def report_furl(details):
    print(details.external_introducer_furl)



@react
def main(reactor):
    o = MigrateOptions()
    try:
        o.parseOptions(argv[1:])
    except UsageError as e:
        raise SystemExit(unicode(e))

    old_secrets = load(o["input"])

    bucket_name = old_secrets["bucket_name"]
    sub, cus = bucket_name.split("-")[-2:]
    sub = autopad_b32decode(sub).decode("utf-8")
    cus = autopad_b32decode(cus).decode("utf-8")

    old_secrets["publichost"] = configmap_public_host(sub, o["domain"])
    old_secrets["privatehost"] = "127.0.0.1"

    internal_introducer_furl = old_secrets["internal_introducer_furl"]

    # The port in the old furl is garbage because we changed what port things
    # listen on.  We happen to know the introducer always listens on port
    # 10000 for now.  The old ip is also garbage because we changed that too.
    # The tub id and swissnum are good, though, so keep those.
    old_secrets["internal_introducer_furl"] = make_external_furl(
        internal_introducer_furl, old_secrets["privatehost"], 10000,
    )
    old_secrets["external_introducer_furl"] = make_external_furl(
        internal_introducer_furl, old_secrets["publichost"], 10000,
    )

    details = SubscriptionDetails(
        bucketname=bucket_name,
        oldsecrets=old_secrets,
        customer_email=o["email"],
        customer_pgpinfo=None,
        product_id=o["plan-id"].decode("utf-8"),

        customer_id=cus,
        subscription_id=sub,

        # Generated by the subscription manager.
        introducer_port_number=0,
        storage_port_number=0,
    )

    smclient = network_client(
        o["subscribe-api"].asText().encode("utf-8"),
        Agent(reactor),
    )

    d = smclient.load(details)
    d.addCallback(report_furl)
    return d
